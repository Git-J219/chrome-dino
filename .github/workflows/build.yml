# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  push:
    tags: 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.15.3
      - name: Package
        shell: powershell
        run: |
          ls
          npm ci
          npx electron-forge make --platform=win32 --arch=x64
          npx electron-forge make --platform=win32 --arch=arm64
          npx electron-forge make --platform=win32 --arch=ia32
      - uses: actions/upload-artifact@v2
        with:
          name: win32-x64
          path: out/make/squirrel.windows/x64/chromedino-setup.exe
      - uses: actions/upload-artifact@v2
        with:
          name: win32-arm64
          path: out/make/squirrel.windows/arm64/chromedino-setup.exe
      - uses: actions/upload-artifact@v2
        with:
          name: win32-ia32
          path: out/make/squirrel.windows/ia32/chromedino-setup.exe
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.15.3
      - name: Package
        shell: bash
        run: |
          ls
          npm ci
          npx electron-forge package --arch=x64 --platform=linux
          npx electron-forge package --arch=arm64 --platform=linux
          npx electron-forge package --arch=armv7l --platform=linux
          cd out
          zip -ryv chromedino-linux-x64.zip "Chrome Dino Spiel+-linux-x64
          zip -ryv chromedino-linux-arm64.zip "Chrome Dino Spiel+-linux-arm64
          zip -ryv chromedino-linux-armv7l.zip "Chrome Dino Spiel+-linux-armv7l
          cd ..
      - uses: actions/upload-artifact@v2
        with:
          name: linux-x64
          path: out/chromedino-linux-x64.zip
      - uses: actions/upload-artifact@v2
        with:
          name: linux-arm64
          path: out/chromedino-linux-arm64.zip
      - uses: actions/upload-artifact@v2
        with:
          name: linux-armv7l
          path: out/chromedino-linux-armv7l.zip
  build-macos:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.15.3
      - name: Package
        shell: bash
        run: |
          npm ci
          npx electron-forge package --arch=x64 --platform=darwin
          npx electron-forge package --arch=arm64 --platform=darwin
          cd out
          zip -ryv chromedino-darwin-x64.zip "Chrome Dino Spiel+-darwin-x64
          zip -ryv chromedino-darwin-arm64.zip "Chrome Dino Spiel+-darwin-arm64
          cd ..
      - uses: actions/upload-artifact@v2
        with:
          name: darwin-x64
          path: out/chromedino-darwin-x64.zip
      - uses: actions/upload-artifact@v2
        with:
          name: darwin-arm64
          path: out/chromedino-darwin-arm64.zip
  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-linux]
    steps:
    - uses: actions/download-artifact@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./darwin-x64/chromedino-darwin-x64.zip
        asset_name: chromedino-darwin-x64.zip
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./darwin-arm64/chromedino-darwin-arm64.zip
        asset_name: chromedino-darwin-arm64.zip
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./linux-x64/chromedino-linux-x64.zip
        asset_name: chromedino-linux-x64.zip
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./linux-arm64/chromedino-linux-arm64.zip
        asset_name: chromedino-linux-arm64.zip
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./linux-armv7l/chromedino-linux-armv7l.zip
        asset_name: chromedino-linux-armv7l.zip
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./win32-x64/chromedino-setup.exe
        asset_name: chromedino-win32-x64.exe
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./win32-arm64/chromedino-setup.exe
        asset_name: chromedino-win32-arm64.exe
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./win32-ia32/chromedino-setup.exe
        asset_name: chromedino-win32-ia32.exe
        asset_content_type: application/octet-stream
